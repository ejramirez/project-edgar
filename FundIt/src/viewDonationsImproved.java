
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.MaskFormatter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Eric
 */
public class viewDonationsImproved extends javax.swing.JFrame {

    /**
     * Creates new form viewDonationsImproved
     */
    public viewDonationsImproved() throws ParseException {
        initComponents();
        
        /*
        * The design for this frame was inspired by Kyle Haptonstall, Senior at Monmouth College 2015
        */
        
        jComboBox1.removeAllItems();
        
        jComboBox1.addItem("(Select Option)");
        jComboBox1.addItem("Date");
        jComboBox1.addItem("Campaign");
        jComboBox1.addItem("Amount Between");
        jComboBox1.addItem("Amount Above");
        jComboBox1.addItem("Amount Below");
        
        jComboBox2.removeAllItems();
        jComboBox2.addItem("(Select Campaign)");
        
        jFormattedTextField1.setBackground(Color.lightGray);
        jFormattedTextField1.setEditable(false);
        jFormattedTextField1.setEnabled(false);
        
        jFormattedTextField2.setBackground(Color.lightGray);
        jFormattedTextField2.setEditable(false);
        jFormattedTextField2.setEnabled(false);
        
        jTextField3.setBackground(Color.lightGray);
        jTextField3.setEditable(false);
        jTextField3.setEnabled(false);
        
        jTextField4.setBackground(Color.lightGray);
        jTextField4.setEditable(false);
        jTextField4.setEnabled(false);
        
        jTextField5.setBackground(Color.lightGray);
        jTextField5.setEditable(false);
        jTextField5.setEnabled(false);
        
        jTextField6.setBackground(Color.lightGray);
        jTextField6.setEditable(false);
        jTextField6.setEnabled(false);
        
        jComboBox2.setBackground(Color.lightGray);
        jComboBox2.setEditable(false);
        jComboBox2.setEnabled(false);
        
        jFormattedTextField1.setColumns(5);
        jFormattedTextField2.setColumns(5);
        jTextField3.setColumns(5);
        jTextField4.setColumns(5);
        jTextField5.setColumns(5);
        jTextField6.setColumns(5);
        
        jFormattedTextField1.setText("");
        jFormattedTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        
        MaskFormatter dateMask1 = new MaskFormatter("##/##/####");
        dateMask1.install(jFormattedTextField1);
        MaskFormatter dateMask2 = new MaskFormatter("##/##/####");
        dateMask2.install(jFormattedTextField2);
        
        jTextArea1.setEditable(false);
        
        
        //Pulling Campaigns
        try {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con;
            con = DriverManager.getConnection(
                    DBcon.Connect(),
                    DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
          
            Statement s = con.createStatement();  
            System.out.println("Connection to DB established...");
            
            ResultSet rs = s.executeQuery("SELECT CampaignTitle"
                    + " FROM Campaign"); 
            
            
            System.out.println("Is connection closed: " + con.isClosed());
            System.out.println("Connection to DB established...");
            while(rs.next()){
                
                //Fname, Minit, Lname
                System.out.print(rs.getString(1));
                jComboBox2.addItem(rs.getString(1));
                
            }
            
            con.close();
            System.out.println("Is connection closed: " + con.isClosed());
        } catch (SQLException ex) {
            Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("View By?");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel2.setText("TO");

        jLabel3.setText("Date");

        jLabel4.setText("Campaign");

        jLabel5.setText("FROM");

        jLabel6.setText("Amount Between");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("AND");

        jTextField3.setText("jTextField3");

        jTextField4.setText("jTextField4");

        jLabel8.setText("Amount Below");

        jLabel9.setText("Amount Above");

        jTextField5.setText("jTextField5");

        jTextField6.setText("jTextField6");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setText("jFormattedTextField1");

        jFormattedTextField2.setText("jFormattedTextField2");

        jButton3.setText("Export");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 151, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)))))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        
        if(jComboBox1.getSelectedItem() == "Date"){
        
            jFormattedTextField1.setBackground(Color.WHITE);
            jFormattedTextField1.setEditable(true);
            jFormattedTextField1.setEnabled(true);
        
            jFormattedTextField2.setBackground(Color.WHITE);
            jFormattedTextField2.setEditable(true);
            jFormattedTextField2.setEnabled(true);
            
            //jTextField1.setBackground(Color.lightGray);
            //jTextField2.setBackground(Color.lightGray);
            jTextField3.setBackground(Color.lightGray);
            jTextField4.setBackground(Color.lightGray);
            jTextField5.setBackground(Color.lightGray);
            jTextField6.setBackground(Color.lightGray);
            jComboBox2.setBackground(Color.lightGray);
            
            //jTextField1.setEnabled(false);
            //jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            jTextField6.setEnabled(false);
            jComboBox2.setEnabled(false);
            
            //jTextField1.setText("");
            //jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
            
        }else if(jComboBox1.getSelectedItem() == "Campaign"){
            
            jComboBox2.setBackground(Color.WHITE);
            //jComboBox2.setEditable(true);
            jComboBox2.setEnabled(true);
            
            jFormattedTextField1.setBackground(Color.lightGray);
            jFormattedTextField2.setBackground(Color.lightGray);
            jTextField3.setBackground(Color.lightGray);
            jTextField4.setBackground(Color.lightGray);
            jTextField5.setBackground(Color.lightGray);
            jTextField6.setBackground(Color.lightGray);
            //jComboBox2.setBackground(Color.lightGray);
            
            jFormattedTextField1.setEnabled(false);
            jFormattedTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            jTextField6.setEnabled(false);
            //jComboBox2.setEnabled(false);
            
            //jFormattedTextField1.setText("");
            //jFormattedTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
        
        }else if(jComboBox1.getSelectedItem() == "Amount Between"){
            
            jTextField3.setBackground(Color.WHITE);
            jTextField3.setEditable(true);
            jTextField3.setEnabled(true);
        
            jTextField4.setBackground(Color.WHITE);
            jTextField4.setEditable(true);
            jTextField4.setEnabled(true);
            
            jFormattedTextField1.setBackground(Color.lightGray);
            jFormattedTextField2.setBackground(Color.lightGray);
            //jTextField3.setBackground(Color.lightGray);
            //jTextField4.setBackground(Color.lightGray);
            jTextField5.setBackground(Color.lightGray);
            jTextField6.setBackground(Color.lightGray);
            jComboBox2.setBackground(Color.lightGray);
            
            jFormattedTextField1.setEnabled(false);
            jFormattedTextField2.setEnabled(false);
            //jTextField3.setEnabled(false);
            //jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            jTextField6.setEnabled(false);
            jComboBox2.setEnabled(false);
            
            //jFormattedTextField1.setText("");
            //jFormattedTextField2.setText("");
            //jTextField3.setText("");
            //jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
        
        }else if(jComboBox1.getSelectedItem() == "Amount Above"){
            
            jTextField5.setBackground(Color.WHITE);
            jTextField5.setEditable(true);
            jTextField5.setEnabled(true);
            
            jFormattedTextField1.setBackground(Color.lightGray);
            jFormattedTextField2.setBackground(Color.lightGray);
            jTextField3.setBackground(Color.lightGray);
            jTextField4.setBackground(Color.lightGray);
            //jTextField5.setBackground(Color.lightGray);
            jTextField6.setBackground(Color.lightGray);
            jComboBox2.setBackground(Color.lightGray);
            
            jFormattedTextField1.setEnabled(false);
            jFormattedTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            //jTextField5.setEnabled(false);
            jTextField6.setEnabled(false);
            jComboBox2.setEnabled(false);
            
            //jFormattedTextField1.setText("");
            //jFormattedTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            //jTextField5.setText("");
            jTextField6.setText("");
        
        }else if(jComboBox1.getSelectedItem() == "Amount Below"){
            
            jTextField6.setBackground(Color.WHITE);
            jTextField6.setEditable(true);
            jTextField6.setEnabled(true);
            
            jFormattedTextField1.setBackground(Color.lightGray);
            jFormattedTextField2.setBackground(Color.lightGray);
            jTextField3.setBackground(Color.lightGray);
            jTextField4.setBackground(Color.lightGray);
            jTextField5.setBackground(Color.lightGray);
            //jTextField6.setBackground(Color.lightGray);
            jComboBox2.setBackground(Color.lightGray);
            
            jFormattedTextField1.setEnabled(false);
            jFormattedTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            //jTextField6.setEnabled(false);
            jComboBox2.setEnabled(false);
            
            //jFormattedTextField1.setText("");
            //jFormattedTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            //jTextField6.setText("");
        
        }else{
        
            jFormattedTextField1.setBackground(Color.lightGray);
            jFormattedTextField2.setBackground(Color.lightGray);
            jTextField3.setBackground(Color.lightGray);
            jTextField4.setBackground(Color.lightGray);
            jTextField5.setBackground(Color.lightGray);
            jTextField6.setBackground(Color.lightGray);
            jComboBox2.setBackground(Color.lightGray);
            
            jFormattedTextField1.setEnabled(false);
            jFormattedTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            jTextField6.setEnabled(false);
            jComboBox2.setEnabled(false);
            
            //jFormattedTextField1.setText("");
            //jFormattedTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
            
            jTextArea1.setText("");
        }
        
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        new mainView().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if(jComboBox1.getSelectedItem() == "Date"){
            
        try {
            
            System.out.println("View By Date ");
            
            jTextArea1.setText("");
            
            String dateLft = jFormattedTextField2.getText();
            String dateRht = jFormattedTextField1.getText();
            
            SimpleDateFormat format = new SimpleDateFormat("MM/dd/yyyy");
            
            Timestamp dateL = new Timestamp(format.parse(dateLft).getTime());
            Timestamp dateR = new Timestamp(format.parse(dateRht).getTime());
            
            System.out.println("## " + dateL + " ##");
            System.out.println("## " + dateR + " ##");
            
            
            //Pulling Information
            try {
                try {
                    Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
                }
                Connection con;
                con = DriverManager.getConnection(
                        DBcon.Connect(),
                        DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
                
                Statement s = con.createStatement();
                System.out.println("Connection to DB established...");
                
                ResultSet rs = s.executeQuery("SELECT I.Title, I.Fname, I.Minit, I.Lname, I.PreferredHouseholdName,"
                        + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                        + " FROM Individual as I left outer join Donations as D on (I.DonorID = D.DonorID)"
                        + " WHERE D.DDate >= '" + dateL + "' AND D.DDate <= '" + dateR + "'");
                
                
                System.out.println("Is connection closed: " + con.isClosed());
                System.out.println("Connection to DB established...");
                while(rs.next()){
                    
                    //Title + Full Name
                    jTextArea1.append("Full Name: " + rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4) + ", " + rs.getString(1) + "." + "\n");
                    
                    //Pref Name
                    jTextArea1.append("Pref Name: " + rs.getString(5) + "\n");
                    
                    //Campaign Title
                    jTextArea1.append("Campaign: " + rs.getString(6) + "\n");
                    
                    //Donation Information
                    jTextArea1.append("Donation Amount: " + rs.getString(7) + "\n");
                    
                    //Donation Date
                    jTextArea1.append("Donation Date: " + rs.getString(8) + "\n");
                    
                    //Notes
                    jTextArea1.append("Notes: " + rs.getString(9) + "\n\n");
                    
                    //System.out.print(rs.getString(1));
                    //jComboBox1.addItem(rs.getString(1));
                    
                }
                
                con.close();
                System.out.println("Is connection closed: " + con.isClosed());
            } catch (SQLException ex) {
                Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);                
            }
            
        } catch (ParseException ex) {
            Logger.getLogger(viewDonationsImproved.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }else if(jComboBox1.getSelectedItem() == "Campaign"){
            
            System.out.println("View By Campaign ");
            
            String Campaign = jComboBox2.getSelectedItem().toString();
            
            jTextArea1.setText("");
            
            //Pulling Information
        try {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con;
            con = DriverManager.getConnection(
                    DBcon.Connect(),
                    DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
          
            Statement s = con.createStatement();  
            System.out.println("Connection to DB established...");
            
            ResultSet rs = s.executeQuery("SELECT I.Title, I.Fname, I.Minit, I.Lname, I.PreferredHouseholdName,"
                    + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                    + " FROM Individual as I left outer join Donations as D on (I.DonorID = D.DonorID)"
                    + " WHERE D.CampaignTitle = '" + Campaign + "'");
            
            
            System.out.println("Is connection closed: " + con.isClosed());
            System.out.println("Connection to DB established...");
            while(rs.next()){
                
                //Title + Full Name
                jTextArea1.append("Full Name: " + rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4) + ", " + rs.getString(1) + "." + "\n");
                
                //Pref Name
                jTextArea1.append("Pref Name: " + rs.getString(5) + "\n");
                
                //Campaign Title
                jTextArea1.append("Campaign: " + rs.getString(6) + "\n");
                
                //Donation Information
                jTextArea1.append("Donation Amount: " + rs.getString(7) + "\n");
                
                //Donation Date
                jTextArea1.append("Donation Date: " + rs.getString(8) + "\n");
                
                //Notes
                jTextArea1.append("Notes: " + rs.getString(9) + "\n\n");
                
                //System.out.print(rs.getString(1));
                //jComboBox1.addItem(rs.getString(1));
                
            }
            
            con.close();
            System.out.println("Is connection closed: " + con.isClosed());
        } catch (SQLException ex) {
            Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }else if(jComboBox1.getSelectedItem() == "Amount Between"){
            
            System.out.println("View By Amount Between ");
            
            jTextArea1.setText("");
            
            String amountLeft = jTextField3.getText();
            String amountRight = jTextField4.getText();
            
            StringCC str = new StringCC();
            Float amountLft = Float.parseFloat(str.CleanUp(amountLeft));
            Float amountRht = Float.parseFloat(str.CleanUp(amountRight));
            
            try {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con;
            con = DriverManager.getConnection(
                    DBcon.Connect(),
                    DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
          
            Statement s = con.createStatement();  
            System.out.println("Connection to DB established...");
            
            ResultSet rs = s.executeQuery("SELECT I.Title, I.Fname, I.Minit, I.Lname, I.PreferredHouseholdName,"
                    + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                    + " FROM Individual as I left outer join Donations as D on (I.DonorID = D.DonorID)"
                    + " WHERE D.Amount >= " + amountLft + " AND D.Amount <= " + amountRht + "");
            
            
            System.out.println("Is connection closed: " + con.isClosed());
            System.out.println("Connection to DB established...");
            while(rs.next()){
                
                //Title + Full Name
                jTextArea1.append("Full Name: " + rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4) + ", " + rs.getString(1) + "." + "\n");
                
                //Pref Name
                jTextArea1.append("Pref Name: " + rs.getString(5) + "\n");
                
                //Campaign Title
                jTextArea1.append("Campaign: " + rs.getString(6) + "\n");
                
                //Donation Information
                jTextArea1.append("Donation Amount: " + rs.getString(7) + "\n");
                
                //Donation Date
                jTextArea1.append("Donation Date: " + rs.getString(8) + "\n");
                
                //Notes
                jTextArea1.append("Notes: " + rs.getString(9) + "\n\n");
                
                //System.out.print(rs.getString(1));
                //jComboBox1.addItem(rs.getString(1));
                
            }
            
            con.close();
            System.out.println("Is connection closed: " + con.isClosed());
        } catch (SQLException ex) {
            Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }else if(jComboBox1.getSelectedItem() == "Amount Above"){
            
            System.out.println("View By Amount Above ");
            
            jTextArea1.setText("");
            
            String amountAbove = jTextField5.getText();
            
            StringCC str = new StringCC();
            Float amountAb = Float.parseFloat(str.CleanUp(amountAbove));
            
            try {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con;
            con = DriverManager.getConnection(
                    DBcon.Connect(),
                    DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
          
            Statement s = con.createStatement();  
            System.out.println("Connection to DB established...");
            
            ResultSet rs = s.executeQuery("SELECT I.Title, I.Fname, I.Minit, I.Lname, I.PreferredHouseholdName,"
                    + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                    + " FROM Individual as I left outer join Donations as D on (I.DonorID = D.DonorID)"
                    + " WHERE D.Amount >= " + amountAb + "");
            
            
            System.out.println("Is connection closed: " + con.isClosed());
            System.out.println("Connection to DB established...");
            while(rs.next()){
                
                //Title + Full Name
                jTextArea1.append("Full Name: " + rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4) + ", " + rs.getString(1) + "." + "\n");
                
                //Pref Name
                jTextArea1.append("Pref Name: " + rs.getString(5) + "\n");
                
                //Campaign Title
                jTextArea1.append("Campaign: " + rs.getString(6) + "\n");
                
                //Donation Information
                jTextArea1.append("Donation Amount: " + rs.getString(7) + "\n");
                
                //Donation Date
                jTextArea1.append("Donation Date: " + rs.getString(8) + "\n");
                
                //Notes
                jTextArea1.append("Notes: " + rs.getString(9) + "\n\n");
                
                //System.out.print(rs.getString(1));
                //jComboBox1.addItem(rs.getString(1));
                
            }
            
            con.close();
            System.out.println("Is connection closed: " + con.isClosed());
        } catch (SQLException ex) {
            Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }else if(jComboBox1.getSelectedItem() == "Amount Below"){
            
            System.out.println("View By Amount Below ");
            
            jTextArea1.setText("");
            
            String amountBelow = jTextField6.getText();
            
            StringCC str = new StringCC();
            Float amountBe = Float.parseFloat(str.CleanUp(amountBelow));
            //String amountBeStr = amountBe.toString();
            
            try {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con;
            con = DriverManager.getConnection(
                    DBcon.Connect(),
                    DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
          
            Statement s = con.createStatement();  
            System.out.println("Connection to DB established...");
            
            ResultSet rs = s.executeQuery("SELECT I.Title, I.Fname, I.Minit, I.Lname, I.PreferredHouseholdName,"
                    + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                    + " FROM Individual as I left outer join Donations as D on (I.DonorID = D.DonorID)"
                    + " WHERE D.Amount <= " + amountBe + "");
            
            
            System.out.println("Is connection closed: " + con.isClosed());
            System.out.println("Connection to DB established...");
            while(rs.next()){
                
                //Title + Full Name
                jTextArea1.append("Full Name: " + rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4) + ", " + rs.getString(1) + "." + "\n");
                
                //Pref Name
                jTextArea1.append("Pref Name: " + rs.getString(5) + "\n");
                
                //Campaign Title
                jTextArea1.append("Campaign: " + rs.getString(6) + "\n");
                
                //Donation Information
                jTextArea1.append("Donation Amount: " + rs.getString(7) + "\n");
                
                //Donation Date
                jTextArea1.append("Donation Date: " + rs.getString(8) + "\n");
                
                //Notes
                jTextArea1.append("Notes: " + rs.getString(9) + "\n\n");
                
                //System.out.print(rs.getString(1));
                //jComboBox1.addItem(rs.getString(1));
                
            }
            
            con.close();
            System.out.println("Is connection closed: " + con.isClosed());
        } catch (SQLException ex) {
            Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }else{
            
            
        
        }
            
            
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewDonationsImproved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewDonationsImproved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewDonationsImproved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewDonationsImproved.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new viewDonationsImproved().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(viewDonationsImproved.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
