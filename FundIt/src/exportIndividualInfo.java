
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import static java.sql.Types.NULL;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import jxl.*;
import jxl.write.*;
import static net.ucanaccess.converters.Functions.string;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Eric
 */
public class exportIndividualInfo extends javax.swing.JFrame {

    /**
     * Creates new form exportIndividualInfo
     */
    public exportIndividualInfo() {
        initComponents();
        
        jTextField1.removeAll();
        jTextField1.setText("output");
        
        //Options Button Groups
        ButtonGroup MaxMin = new ButtonGroup();
        MaxMin.add(jRadioButton1);
        MaxMin.add(jRadioButton2);
        MaxMin.add(jRadioButton3);
        
        ButtonGroup CampEvt = new ButtonGroup();
        CampEvt.add(jRadioButton4);
        CampEvt.add(jRadioButton5);
        CampEvt.add(jRadioButton6);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Export to Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back to Export Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Individual Info:");

        jCheckBox1.setText("First Name");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Middle Name");

        jCheckBox3.setText("Last Name");

        jCheckBox4.setText("Title");

        jCheckBox5.setText("Preferred Household Name");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Donation Info:");

        jCheckBox7.setText("Amount");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("Donation Date");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jCheckBox9.setText("Notes");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jCheckBox10.setText("Campaign Title");

        jCheckBox11.setText("Event Name");

        jCheckBox12.setText("CheckID");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jLabel3.setText("Excel File Name:");

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Donor Info:");

        jCheckBox13.setText("Street");
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });

        jCheckBox14.setText("City");

        jCheckBox15.setText("State");

        jCheckBox16.setText("ZipCode");

        jCheckBox17.setText("Phone");

        jCheckBox18.setText("Email");

        jCheckBox19.setText("Status");

        jCheckBox20.setText("Solicitation");

        jCheckBox21.setText("Preferred Phone");

        jCheckBox22.setText("Preferred Email");

        jCheckBox23.setText("Preferred Mailing Address");
        jCheckBox23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox23ActionPerformed(evt);
            }
        });

        jLabel5.setText("Options:");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("Check the boxes of the info that you want to be exported onto an excel sheet.");

        jRadioButton1.setText("Sort by MAX");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Sort by MIN");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Default");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Sort By Event");

        jRadioButton5.setText("Sort By Campaign");

        jRadioButton6.setText("Default");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox22))
                    .addComponent(jCheckBox23)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox12)))
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox13)
                    .addComponent(jCheckBox14)
                    .addComponent(jCheckBox15)
                    .addComponent(jCheckBox16)
                    .addComponent(jCheckBox17)
                    .addComponent(jCheckBox18)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox19)
                    .addComponent(jCheckBox20)
                    .addComponent(jCheckBox21)
                    .addComponent(jCheckBox22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox9)
                    .addComponent(jCheckBox10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
                                    
            String Fname, Minit, Lname;
            String Title;
            String PreferredHHName;
            String Street, City, State, Zipcode;
            String Phone, Email, Status, Solicitation;
            String pStreet, pCity, pState, pZipcode;
            String pPhone, pEmail;
            String DonorID, Amount;
            String DDate, Notes, CampaignT, EventName, CheckID;
            
            //TextField Check
            
            //Writing into an excel spreadsheet
            WritableWorkbook workbook = Workbook.createWorkbook(new File(jTextField1.getText() + ".xls"));
            
            WritableSheet sheet = workbook.createSheet("Sheet 1",0);
            
            //ORDER BY CLAUSE
            String sql = "";
            
            /*
            if(jRadioButton1.isSelected()){
                sql = "";
            } else if(jRadioButton2.isSelected()){
                sql = "ORDER BY MIN(DN.Amount)";
            }else if (jRadioButton3.isSelected()){
                sql = "ORDER BY MAX(DN.Amount)";
            }else{}
            */
            
            
            
            //Fonts
            WritableFont TimesNewRoman18pt = new WritableFont(WritableFont.TIMES,12);
            WritableCellFormat TimesNewRoman18ptFormat = new WritableCellFormat(TimesNewRoman18pt);
            
            //Moving position
            int xPos = 0; //x-coord
            int yPos = 1;//y-coord
            //int cPos = 0;//Column Number
            
            //Pulling from the database
            try {
            try {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(viewDonors.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con;
            con = DriverManager.getConnection(
                    DBcon.Connect(),
                    DBcon.Login(), DBcon.Pass()); //(file path, db login, db password) - since it doesnt have a login, leave it blank
          
            Statement s = con.createStatement();  
            System.out.println("Connection to DB established...");
            
            ResultSet rs = s.executeQuery("SELECT I.Fname, I.Minit, I.Lname,"
                    + "I.Title, I.PreferredHouseholdName, "
                    + "D.Street, "
                    + "D.City, D.State, D.ZipCode,"
                    + "D.Phone, "
                    + "D.EmailAddress,"
                    + "D.UserStatus, D.Solicitation,"
                    + "D.PreferredMailStreet,"
                    + "D.PreferredMailCity, D.PreferredMailState, D.PreferredMailZipCode,"
                    + "D.PreferredPhone, D.PreferredEmail, D.DonorID, DN.DDate, DN.Notes, DN.CampaignTitle,"
                    + "DN.EventName, DN.CheckID, SUM(DN.Amount) as TotalAmount FROM Individual as I left outer join Donor as D ON (I.DonorID = D.DonorID) "
                    + "INNER JOIN Donations as DN ON (D.DonorID = DN.DonorID) "
                    + "GROUP BY I.Fname, I.Minit, I.Lname, I.Title, I.PreferredHouseholdName, D.Street, D.City, D.State, D.ZipCode, D.Phone, D.EmailAddress,"
                    + "D.UserStatus, D.Solicitation, D.PreferredMailStreet, D.PreferredMailCity, D.PreferredMailState, D.PreferredMailZipCode,"
                    + "D.PreferredPhone, D.PreferredEmail, D.DonorID, DN.DDate, DN.Notes, DN.CampaignTitle, DN.EventName, DN.CheckID " + sql); 
            
            
            System.out.println("Is connection closed: " + con.isClosed());
            System.out.println("Connection to DB established...");
            while(rs.next()){
                
                //Pulling the data
                
                Fname = rs.getString(1);
                Minit = rs.getString(2);
                Lname = rs.getString(3);
                Title = rs.getString(4);
                PreferredHHName = rs.getString(5);
                Street = rs.getString(6);
                City = rs.getString(7);
                State = rs.getString(8);
                Zipcode = rs.getString(9);
                Phone = rs.getString(10);
                Email = rs.getString(11);
                Status = rs.getString(12);
                Solicitation = rs.getString(13);
                pStreet = rs.getString(14);
                pCity = rs.getString(15);
                pState = rs.getString(16);
                pZipcode = rs.getString(17);
                pPhone = rs.getString(18);
                pEmail = rs.getString(19);
                DonorID = rs.getString(20);
                Amount = rs.getString(26);
                DDate = rs.getString(21);
                Notes = rs.getString(22);
                CampaignT = rs.getString(23);
                EventName = rs.getString(24);
                CheckID = rs.getString(25);
                
                //Setting x to the correct starting position
                xPos = 0;
                
                
                
            //Writing into the cells //I feel like there is an easier way to write these IF statements
            if(jCheckBox1.isSelected()){
            Label label1 = new Label(xPos,yPos,Fname);
            sheet.addCell(label1);
            xPos++;
            }else{}
            
            if(jCheckBox2.isSelected()){
            Label label2 = new Label(xPos,yPos,Minit);
            sheet.addCell(label2);
            xPos++;
            }else{}
            
            if(jCheckBox3.isSelected()){
            Label label3 = new Label(xPos,yPos,Lname);
            sheet.addCell(label3);
            xPos++;            
            }else{}
            
            if(jCheckBox4.isSelected()){
            Label label4 = new Label(xPos,yPos,Title);
            sheet.addCell(label4);
            xPos++;
            }else{}
            
            if(jCheckBox5.isSelected()){
            Label label5 = new Label(xPos,yPos,PreferredHHName);
            sheet.addCell(label5);
            xPos++;
            }else{}
            
            if(jCheckBox13.isSelected()){
            Label label6 = new Label(xPos,yPos,Street);
            sheet.addCell(label6);
            xPos++;
            }else{}
            
            if(jCheckBox14.isSelected()){
            Label label7 = new Label(xPos,yPos,City);
            sheet.addCell(label7);
            xPos++;
            }else{}
            
            if(jCheckBox15.isSelected()){
            Label label8 = new Label(xPos,yPos,State);
            sheet.addCell(label8);
            xPos++;
            }else{}
            
            if(jCheckBox16.isSelected()){
            Label label9 = new Label(xPos,yPos,Zipcode);
            sheet.addCell(label9);
            xPos++;
            }else{}
            
            if(jCheckBox17.isSelected()){
            Label label10 = new Label(xPos,yPos,Phone);
            sheet.addCell(label10);
            xPos++;
            }else{}
            
            if(jCheckBox18.isSelected()){
            Label label11 = new Label(xPos,yPos,Email);
            sheet.addCell(label11);
            xPos++;
            }else{}
            
            if(jCheckBox19.isSelected()){
            Label label12 = new Label(xPos,yPos,Status);
            sheet.addCell(label12);
            xPos++;
            }else{}
            
            if(jCheckBox20.isSelected()){
            Label label13 = new Label(xPos,yPos,Solicitation);
            sheet.addCell(label13);
            xPos++;
            }else{}
            
            if(jCheckBox21.isSelected()){
            Label label18 = new Label(xPos,yPos,pPhone);
            sheet.addCell(label18);
            xPos++;
            }else{}
            
            if(jCheckBox22.isSelected()){
            Label label19 = new Label(xPos,yPos,pEmail);
            sheet.addCell(label19);
            xPos++;
            }else{}
            
            if(jCheckBox23.isSelected()){
            Label label14 = new Label(xPos,yPos,pStreet);
            sheet.addCell(label14);
            xPos++;
            
            Label label15 = new Label(xPos,yPos,pCity);
            sheet.addCell(label15);
            xPos++;
            
            Label label16 = new Label(xPos,yPos,pState);
            sheet.addCell(label16);
            xPos++;
            
            Label label17 = new Label(xPos,yPos,pZipcode);
            sheet.addCell(label17);
            xPos++;
            }
            
            if(jCheckBox8.isSelected()){
            Label label22 = new Label(xPos,yPos,DDate);
            sheet.addCell(label22);
            xPos++;
            }
            
            if(jCheckBox9.isSelected()){
            Label label23 = new Label(xPos,yPos,Notes);
            sheet.addCell(label23);
            xPos++;
            }
            
            if(jCheckBox10.isSelected()){
            Label label24 = new Label(xPos,yPos,CampaignT);
            sheet.addCell(label24);
            xPos++;
            }
            
            if(jCheckBox11.isSelected()){
            Label label25 = new Label(xPos,yPos,EventName);
            sheet.addCell(label25);
            xPos++;
            }
            
            if(jCheckBox12.isSelected()){
            Label label26 = new Label(xPos,yPos,CheckID);
            sheet.addCell(label26);
            xPos++;
            }
            
            if(jCheckBox7.isSelected()){
            Label label20 = new Label(xPos,yPos,Amount);
            sheet.addCell(label20);
            xPos++;
            }else{}
            
            //DonorID always shows up no matter what
            Label label21 = new Label(xPos,yPos,DonorID);
            sheet.addCell(label21);
            xPos++;
            
            yPos++;
                    
                
            }
            
            con.close();
            System.out.println("Is connection closed: " + con.isClosed());
        } catch (SQLException ex) {
            Logger.getLogger(userLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            int hxPos = 0;
            
            //Headers
            
            if(jCheckBox1.isSelected()){
            Label FnameHeader = new Label(hxPos,0,"First Name", TimesNewRoman18ptFormat);
            sheet.addCell(FnameHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox2.isSelected()){
            Label MinitHeader = new Label(hxPos,0,"Middle Initial", TimesNewRoman18ptFormat);
            sheet.addCell(MinitHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox3.isSelected()){
            Label LnameHeader = new Label(hxPos,0,"Last Name", TimesNewRoman18ptFormat);
            sheet.addCell(LnameHeader);
            hxPos++;
            }
            
            if(jCheckBox4.isSelected()){
            Label TitleHeader = new Label(hxPos,0,"Title", TimesNewRoman18ptFormat);
            sheet.addCell(TitleHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox5.isSelected()){
            Label PHHNHeader = new Label(hxPos,0,"PrefferredHHN Name", TimesNewRoman18ptFormat);
            sheet.addCell(PHHNHeader);
            hxPos++;
            }
            
            if(jCheckBox13.isSelected()){
            Label StreetHeader = new Label(hxPos,0,"Street Name", TimesNewRoman18ptFormat);
            sheet.addCell(StreetHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox14.isSelected()){
            Label CityHeader = new Label(hxPos,0,"City", TimesNewRoman18ptFormat);
            sheet.addCell(CityHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox15.isSelected()){
            Label StateHeader = new Label(hxPos,0,"State", TimesNewRoman18ptFormat);
            sheet.addCell(StateHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox16.isSelected()){
            Label ZipHeader = new Label(hxPos,0,"Zipcode", TimesNewRoman18ptFormat);
            sheet.addCell(ZipHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox17.isSelected()){
            Label PhoneHeader = new Label(hxPos,0,"Phone", TimesNewRoman18ptFormat);
            sheet.addCell(PhoneHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox18.isSelected()){
            Label EmailHeader = new Label(hxPos,0,"Email", TimesNewRoman18ptFormat);
            sheet.addCell(EmailHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox19.isSelected()){
            Label StatusHeader = new Label(hxPos,0,"Status", TimesNewRoman18ptFormat);
            sheet.addCell(StatusHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox20.isSelected()){
            Label SolicitationHeader = new Label(hxPos,0,"Solicitation", TimesNewRoman18ptFormat);
            sheet.addCell(SolicitationHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox21.isSelected()){
            Label pPhoneHeader = new Label(hxPos,0,"pPhone", TimesNewRoman18ptFormat);
            sheet.addCell(pPhoneHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox22.isSelected()){
            Label pEmailHeader = new Label(hxPos,0,"pEmail", TimesNewRoman18ptFormat);
            sheet.addCell(pEmailHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox23.isSelected()){
            Label pStreetHeader = new Label(hxPos,0,"pStreet", TimesNewRoman18ptFormat);
            sheet.addCell(pStreetHeader);
            hxPos++;
            
            Label pCityHeader = new Label(hxPos,0,"pCity", TimesNewRoman18ptFormat);
            sheet.addCell(pCityHeader);
            hxPos++;
            
            Label pStateHeader = new Label(hxPos,0,"pState", TimesNewRoman18ptFormat);
            sheet.addCell(pStateHeader);
            hxPos++;
            
            Label pZipHeader = new Label(hxPos,0,"pZipcode", TimesNewRoman18ptFormat);
            sheet.addCell(pZipHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox8.isSelected()){
            Label DDateHeader = new Label(hxPos,0,"Due Date", TimesNewRoman18ptFormat);
            sheet.addCell(DDateHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox9.isSelected()){
            Label NotesHeader = new Label(hxPos,0,"Notes", TimesNewRoman18ptFormat);
            sheet.addCell(NotesHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox10.isSelected()){
            Label CampaignTHeader = new Label(hxPos,0,"Campaign Title", TimesNewRoman18ptFormat);
            sheet.addCell(CampaignTHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox11.isSelected()){
            Label EventNameHeader = new Label(hxPos,0,"Event Name", TimesNewRoman18ptFormat);
            sheet.addCell(EventNameHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox12.isSelected()){
            Label CheckIDHeader = new Label(hxPos,0,"CheckID", TimesNewRoman18ptFormat);
            sheet.addCell(CheckIDHeader);
            hxPos++;
            }else{}
            
            if(jCheckBox7.isSelected()){
            Label AmountHeader = new Label(hxPos,0,"Total Amount", TimesNewRoman18ptFormat);
            sheet.addCell(AmountHeader);
            hxPos++;
            }else{}
            
            //This shows up on the excel sheet no matter what
            Label IDHeader = new Label(hxPos,0,"DonorID", TimesNewRoman18ptFormat);
            sheet.addCell(IDHeader);
            hxPos++;
            
            
            
            workbook.write();
            workbook.close();
            
            
        } catch (IOException | WriteException ex) {
            Logger.getLogger(exportIndividualInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false); 
        new exportMenu().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jCheckBox23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox23ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exportIndividualInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exportIndividualInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exportIndividualInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exportIndividualInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new exportIndividualInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
