/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;

import net.ucanaccess.converters.TypesMap.AccessType;
import net.ucanaccess.ext.FunctionType;
import net.ucanaccess.jdbc.UcanaccessConnection;
import net.ucanaccess.jdbc.UcanaccessDriver;
/**
 *
 * @author Owner
 */
public class addDonation extends javax.swing.JFrame {

    /**
     * Creates new form addDonation
     */
    public addDonation() {
        initComponents();
        String DBLoc1 = "jdbc:ucanaccess:///Users/Alexander/Documents/Projects/Project-Edgar/Project-Edgar-Database.accdb"; // Alex
        String DBLoc2 = "jdbc:ucanaccess://C:\\Users\\Owner\\Desktop\\project-edgar\\Project-Edgar-Database.accdb"; // Mercedes
        this.donors.removeAllItems();
        this.campaigns.removeAllItems();
        this.campaigns.addItem("None");
        this.events.removeAllItems();
        this.events.addItem("None");
        this.paymentFreq.removeAllItems();
        this.paymentFreq.addItem("Monthly");
        this.paymentFreq.addItem("Biweekly");
        this.paymentFreq.addItem("Weekly");
        this.paymentFreq.setEditable(false);
        this.paymentFreq.setEnabled(false);
        this.paymentFreq.setBackground(Color.lightGray);
        this.amountPaid.setEditable(false);
        this.amountPaid.setBackground(Color.lightGray);
        this.lastPaymentDate.setEditable(false);
        this.lastPaymentDate.setBackground(Color.lightGray);
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            this.con = DriverManager.getConnection(DBLoc1);
            this.st = this.con.createStatement();
            ResultSet rs = this.st.executeQuery("SELECT CampaignTitle FROM Campaign");
            while(rs.next()) {
                this.campaigns.addItem(rs.getString(1));
            }
            rs = this.st.executeQuery("SELECT EventName FROM Events");
            while(rs.next()) {
                this.events.addItem(rs.getString(1));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(addDonation.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        donorType = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        individual = new javax.swing.JRadioButton();
        corp_org = new javax.swing.JRadioButton();
        grant = new javax.swing.JRadioButton();
        donors = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        campaigns = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        events = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notes = new javax.swing.JTextArea();
        pledge = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        paymentFreq = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        amountPaid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lastPaymentDate = new javax.swing.JTextField();
        addDonationPledge = new javax.swing.JButton();
        backToMain = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Donor");

        donorType.add(individual);
        individual.setText("Individual");
        individual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                individualActionPerformed(evt);
            }
        });

        donorType.add(corp_org);
        corp_org.setText("Corporate/Organization");
        corp_org.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                corp_orgActionPerformed(evt);
            }
        });

        donorType.add(grant);
        grant.setText("Grant");
        grant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantActionPerformed(evt);
            }
        });

        donors.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Amount");

        jLabel3.setText("Date");

        date.setText("MM/DD/YYYY");

        jLabel4.setText("Campaign");

        campaigns.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        campaigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campaignsActionPerformed(evt);
            }
        });

        jLabel5.setText("Event");

        events.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        events.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventsActionPerformed(evt);
            }
        });

        jLabel6.setText("Notes");

        notes.setColumns(20);
        notes.setRows(5);
        jScrollPane1.setViewportView(notes);

        pledge.setText("Pledge");
        pledge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pledgeActionPerformed(evt);
            }
        });

        jLabel7.setText("Payment Frequency");

        paymentFreq.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Amount Paid");

        jLabel9.setText("Last Payment Date");

        lastPaymentDate.setText("MM/DD/YYYY");

        addDonationPledge.setText("Save");
        addDonationPledge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDonationPledgeActionPerformed(evt);
            }
        });

        backToMain.setText("Cancel - Back To Main");
        backToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addDonationPledge)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backToMain)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pledge)
                            .addComponent(donors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(events, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paymentFreq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastPaymentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(individual)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(corp_org))
                                    .addComponent(amountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grant))
                            .addComponent(campaigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(backToMain)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(donors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(individual)
                    .addComponent(corp_org)
                    .addComponent(grant))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campaigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(events, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pledge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(paymentFreq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(amountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lastPaymentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addDonationPledge)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void individualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_individualActionPerformed
        try {
            this.donors.removeAllItems();
            ResultSet rs = this.st.executeQuery("SELECT Fname FROM Individual");
            while(rs.next()) {
                this.donors.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(addDonation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_individualActionPerformed

    private void corp_orgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corp_orgActionPerformed
        try {
            this.donors.removeAllItems();
            ResultSet rs = this.st.executeQuery("SELECT OrgName FROM Corporate_Organization");
            while(rs.next()) {
                this.donors.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(addDonation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_corp_orgActionPerformed

    private void grantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantActionPerformed
        try {
            this.donors.removeAllItems();
            ResultSet rs = this.st.executeQuery("SELECT GrantName FROM Grant");
            while(rs.next()) {
                this.donors.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(addDonation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_grantActionPerformed

    private void campaignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campaignsActionPerformed

    }//GEN-LAST:event_campaignsActionPerformed

    private void eventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventsActionPerformed

    private void pledgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pledgeActionPerformed
        if (this.pledge.isSelected()) { 
            this.paymentFreq.setEditable(true);
            this.paymentFreq.setBackground(Color.white);
            this.paymentFreq.setEnabled(true);
            this.amountPaid.setEditable(true);
            this.amountPaid.setBackground(Color.white);
            this.lastPaymentDate.setEditable(true);
            this.lastPaymentDate.setBackground(Color.white); 
        }
        else {
            this.paymentFreq.setEditable(false);
            this.paymentFreq.setBackground(Color.lightGray);
            this.paymentFreq.setEnabled(false);
            this.amountPaid.setEditable(false);
            this.amountPaid.setBackground(Color.lightGray);
            this.lastPaymentDate.setEditable(false);
            this.lastPaymentDate.setBackground(Color.lightGray); 
        }
    }//GEN-LAST:event_pledgeActionPerformed

    private void backToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainActionPerformed
        try {
            this.con.close();
        } catch (SQLException ex) {
            Logger.getLogger(addDonation.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        new mainView().setVisible(true);
    }//GEN-LAST:event_backToMainActionPerformed

    private void addDonationPledgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDonationPledgeActionPerformed
        try {
            ResultSet donor = null;
            if (this.individual.isSelected()) {
                donor = this.st.executeQuery("SELECT DonorID FROM Individual WHERE Individual.Fname LIKE '" + this.donors.getSelectedItem() + "' ");
            }
            else if(this.grant.isSelected()) {
                donor = this.st.executeQuery("SELECT DonorID FROM Grant WHERE Grant.GrantName LIKE '" + this.donors.getSelectedItem() + "' ");
            }
            else {
                donor = this.st.executeQuery("SELECT DonorID FROM Corporate_Organization WHERE Corporate_Organization.OrgName LIKE '" + this.donors.getSelectedItem() + "' ");
            }
            donor.next();
            String donorID = donor.getString(1);
            String donationInsert = "INSERT INTO Donations(DonorID,Amount,DDate,Notes,CampaignTitle,PaymentTypeID,EventName) Values(?,?,?,?,?,?,?)";
            SimpleDateFormat format = new SimpleDateFormat("MM/dd/yyyy");
            Date dDate = format.parse(this.date.getText());
            PreparedStatement ps = this.con.prepareStatement(donationInsert);
            ps.setString(1,donorID);
            ps.setString(2,this.amount.getText());
            ps.setTimestamp(3,new Timestamp(dDate.getTime()));
            ps.setString(4,this.notes.getText());
            ps.setString(5,this.campaigns.getSelectedItem().toString());
            ps.setString(6,"1");
            ps.setString(7,this.events.getSelectedItem().toString());
            ps.executeUpdate();
            this.con.commit();
            this.con.close();
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(addDonation.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        new addDonation().setVisible(true);
    }//GEN-LAST:event_addDonationPledgeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addDonation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDonationPledge;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField amountPaid;
    private javax.swing.JButton backToMain;
    private javax.swing.JComboBox campaigns;
    private javax.swing.JRadioButton corp_org;
    private javax.swing.JTextField date;
    private javax.swing.ButtonGroup donorType;
    private javax.swing.JComboBox donors;
    private javax.swing.JComboBox events;
    private javax.swing.JRadioButton grant;
    private javax.swing.JRadioButton individual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastPaymentDate;
    private javax.swing.JTextArea notes;
    private javax.swing.JComboBox paymentFreq;
    private javax.swing.JCheckBox pledge;
    // End of variables declaration//GEN-END:variables
    private Connection con;
    private Statement st;

}
